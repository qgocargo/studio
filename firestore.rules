rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Public read access for all collections needed by the app
    match /{collection}/{docId} 
      where collection in ['deliveries', 'users', 'jobfiles', 'pods', 'feedback'] {
      allow read: if true;
    }

    // Deliveries: Only authenticated users can create/update
    match /deliveries/{deliveryId} {
      allow write: if request.auth != null;
    }

    // Pods: Only authenticated users can create/update
    match /pods/{podId} {
       allow write: if request.auth != null;
    }
    
    // Feedback: Anyone can create feedback
    match /feedback/{feedbackId} {
      allow create: if true;
    }

    // Users: Only an admin can update user status.
    match /users/{userId} {
      function isStaff() {
        return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'user', 'checker'];
      }
      allow create: if request.auth.uid == userId;
      allow update: if isStaff();
    }
    
    // Jobfiles: only staff can write
     match /jobfiles/{jobfileId} {
        function isStaff() {
            return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'user', 'checker'];
        }
        allow write: if isStaff();
    }
  }
}
