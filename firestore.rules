rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get the role of the requesting user.
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // A list of internal staff roles that can access core data.
    function isStaff() {
      // Check for auth existence before trying to access uid.
      return request.auth != null && getUserRole(request.auth.uid) in ['admin', 'checker', 'user'];
    }

    // == USER PROFILES ==
    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      // Allow reading user data if not logged in (for development) OR if the user is authenticated and meets original criteria
      allow read, list: if request.auth == null || isStaff();
      allow update: if isStaff();
      allow delete: if isStaff() && resource.data.role != 'admin';
    }

    // == JOB FILES ==
    match /jobfiles/{jobfileId} {
      // Allow reading/listing if not logged in (for development) OR if the user is a staff member.
      allow read, list, create: if request.auth == null || isStaff();

      // Allow updates by the original creator, an admin, or a checker.
      allow update: if isStaff() && (
        resource.data.createdBy == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.displayName ||
        getUserRole(request.auth.uid) in ['admin', 'checker']
      );

      // Only admins can delete.
      allow delete: if isStaff() && getUserRole(request.auth.uid) == 'admin';
    }

    // == DELIVERIES ==
    match /deliveries/{deliveryId} {
      // Allow creating if not logged in (for dev) or if staff
      allow create: if request.auth == null || isStaff();
      // Allow listing if not logged in (for dev) or if staff
      allow list: if request.auth == null || isStaff();
      // Allow reading a delivery if not logged in, or if assigned driver, or if staff.
      allow read, update: if request.auth == null || (request.auth.uid == resource.data.driverUid || isStaff());
      // Public access for single delivery GET (for feedback page).
      allow get: if true;
    }

    // == PROOF OF DELIVERY (POD) ==
    match /pods/{podId} {
      // Public access for single POD GET (for QR code on receipts).
      allow get: if true; 

      // Only the assigned driver can create the POD record.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.driverUid;
      
      // Only admins can delete a POD record.
      allow delete: if request.auth != null && getUserRole(request.auth.uid) == 'admin';
    }

    // == FEEDBACK ==
    match /feedback/{feedbackId} {
      // Anyone can submit feedback or get a single entry.
      allow get, create: if true;
      
      // Staff can list all feedback.
      allow list: if request.auth != null && isStaff();

      // Staff can read all feedback. Drivers can only read feedback about them.
      allow read: if request.auth != null && (isStaff() || request.auth.uid == resource.data.driverUid);
    }

    // == OTHER COLLECTIONS ==
    match /clients/{doc=**} {
      // Only staff can read or write to the client list.
      allow read, write: if request.auth != null && isStaff();
    }

    match /deleted_jobfiles/{doc=**} {
      // Only admins can access the recycle bin.
      allow read, write: if request.auth != null && getUserRole(request.auth.uid) == 'admin';
    }
  }
}
